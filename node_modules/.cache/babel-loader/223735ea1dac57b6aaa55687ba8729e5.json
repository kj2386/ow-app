{"ast":null,"code":"var _jsxFileName = \"/Users/Aluxe/sei/projects/ow-app/src/components/Quickplay.js\";\nimport React from 'react';\n\nfunction Quickplay(props) {\n  const profile = props.profile;\n  const best = profile.quickPlayStats.careerStats.allHeroes.best;\n  const assists = profile.quickPlayStats.careerStats.allHeroes.assists;\n  const combat = profile.quickPlayStats.careerStats.allHeroes.combat;\n  const game = profile.quickPlayStats.careerStats.allHeroes.game;\n  const average = profile.quickPlayStats.careerStats.allHeroes.average;\n  const misc = profile.quickPlayStats.careerStats.allHeroes.miscellaneous;\n  const awards = profile.quickPlayStats.careerStats.allHeroes.mathAwards;\n  return React.createElement(\"div\", {\n    className: \"Quickplay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Quickplay Stats\"), React.createElement(\"div\", {\n    className: \"best\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Best\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"ALL DAMAGE DONE - MOST IN GAME: \", best.allDamageDoneMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"BARRIER DAMAGE DONE - MOST IN GAME:\", ' ', best.barrierDamageDoneMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"defensive assists - most in game: \", best.defensiveAssistsMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"eliminations - most in game: \", best.eliminationsMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"environmental kills - most in game:\", ' ', best.environmentalKillsMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"final blows - most in game: \", best.finalBlowsMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"healing done - most in game: \", best.healingDoneMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"hero damage done - most in game: \", best.heroDamageDoneMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"kills streak best: \", best.killsStreakBest), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"melee final blows - most in game: \", best.meleeFinalBlowsMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"multikills best: \", best.multikillsBest), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"objective kills - most in game: \", best.objectiveKillsMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"objective time - most in game: \", best.objectiveTimeMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"offensive assists - most in game: \", best.offensiveAssistsMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"environmental kills - most in game:\", ' ', best.environmentalKillsMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"solo kills - most in game: \", best.soloKillsMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"teleporter pads destroyed - most in game:\", ' ', best.teleporterPadsDestroyedMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"time spent on fire - most in game: \", best.timeSpentOnFireMostInGame), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"turrets destroyed - most in game: \", best.turretsDestroyedMostInGame))), React.createElement(\"div\", {\n    className: \"Assists\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Assists\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"defensive assists: \", assists.defensiveAssists), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"healing done: \", assists.healingDone), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"offensive assists: \", assists.offensiveAssists))), React.createElement(\"div\", {\n    className: \"Combat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Combat\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"damage done: \", combat.damageDone), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"barrier damage done: \", combat.barrierDamageDone), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"deaths: \", combat.deaths), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"eliminations: \", combat.eliminations), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"environmental kills: \", combat.environmentalKills), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"final blows: \", combat.finalBlows), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"hero damage done: \", combat.heroDamageDone), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"melee final blows: \", combat.meleeFinalBlows), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"multikills: \", combat.multikills), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"objective kills: \", combat.objectiveKills), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"objective time: \", combat.objectiveTime), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"solo kills: \", combat.soloKills), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"time spent on fire: \", combat.timeSpentOnFire))), React.createElement(\"div\", {\n    className: \"Game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Game\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"games won: \", game.gamesWon), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"time played: \", game.timePlayed))), React.createElement(\"div\", {\n    className: \"Average\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Average\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"all damage done - avg per 10 min: \", average.allDamageDoneAvgPer10Min, ' '), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"barrier damage done - avg per 10 min:\", ' ', average.barrierDamageDoneAvgPer10Min, ' '), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"deaths - avg per 10 min: \", average.deathsAvgPer10Min, \" \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"eliminations- avg per 10 min: \", average.eliminationsAvgPer10Min, ' '), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"final blows - avg per 10 min: \", average.finalBlowsAvgPer10Min, ' '), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"healing done - avg per 10 min: \", average.healingDoneAvgPer10Min, ' '), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"hero damage done - avg per 10 min:\", ' ', average.heroDamageDoneAvgPer10Min, ' '), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"objective kills - avg per 10 min:\", ' ', average.objectiveKillsAvgPer10Min, ' '), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"objective time - avg per 10 min: \", average.objectiveTimeAvgPer10Min, ' '), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"solo kills - avg per 10 min: \", average.soloKillsAvgPer10Min, \" \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"time spent on fire - avg per 10 min:\", ' ', average.timeSpentOnFireAvgPer10Min, ' '))), React.createElement(\"div\", {\n    className: \"Misc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Miscellaneous\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"teleporter pads destroyed: \", misc.teleporterPadsDestroyed), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"turrets destroyed: \", misc.turretsDestroyed))));\n}\n\nexport default Quickplay;","map":{"version":3,"sources":["/Users/Aluxe/sei/projects/ow-app/src/components/Quickplay.js"],"names":["React","Quickplay","props","profile","best","quickPlayStats","careerStats","allHeroes","assists","combat","game","average","misc","miscellaneous","awards","mathAwards","allDamageDoneMostInGame","barrierDamageDoneMostInGame","defensiveAssistsMostInGame","eliminationsMostInGame","environmentalKillsMostInGame","finalBlowsMostInGame","healingDoneMostInGame","heroDamageDoneMostInGame","killsStreakBest","meleeFinalBlowsMostInGame","multikillsBest","objectiveKillsMostInGame","objectiveTimeMostInGame","offensiveAssistsMostInGame","soloKillsMostInGame","teleporterPadsDestroyedMostInGame","timeSpentOnFireMostInGame","turretsDestroyedMostInGame","defensiveAssists","healingDone","offensiveAssists","damageDone","barrierDamageDone","deaths","eliminations","environmentalKills","finalBlows","heroDamageDone","meleeFinalBlows","multikills","objectiveKills","objectiveTime","soloKills","timeSpentOnFire","gamesWon","timePlayed","allDamageDoneAvgPer10Min","barrierDamageDoneAvgPer10Min","deathsAvgPer10Min","eliminationsAvgPer10Min","finalBlowsAvgPer10Min","healingDoneAvgPer10Min","heroDamageDoneAvgPer10Min","objectiveKillsAvgPer10Min","objectiveTimeAvgPer10Min","soloKillsAvgPer10Min","timeSpentOnFireAvgPer10Min","teleporterPadsDestroyed","turretsDestroyed"],"mappings":"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","sourcesContent":["import React from 'react';\n\nfunction Quickplay(props) {\n  const { profile } = props;\n\n  const best = profile.quickPlayStats.careerStats.allHeroes.best;\n  const assists = profile.quickPlayStats.careerStats.allHeroes.assists;\n  const combat = profile.quickPlayStats.careerStats.allHeroes.combat;\n  const game = profile.quickPlayStats.careerStats.allHeroes.game;\n  const average = profile.quickPlayStats.careerStats.allHeroes.average;\n  const misc = profile.quickPlayStats.careerStats.allHeroes.miscellaneous;\n  const awards = profile.quickPlayStats.careerStats.allHeroes.mathAwards;\n\n  return (\n    <div className=\"Quickplay\">\n      <h1>Quickplay Stats</h1>\n      <div className=\"best\">\n        <h2>Best</h2>\n        <ul>\n          <li>\n            ALL DAMAGE DONE - MOST IN GAME: {best.allDamageDoneMostInGame}\n          </li>\n          <li>\n            BARRIER DAMAGE DONE - MOST IN GAME:{' '}\n            {best.barrierDamageDoneMostInGame}\n          </li>\n          <li>\n            defensive assists - most in game: {best.defensiveAssistsMostInGame}\n          </li>\n          <li>eliminations - most in game: {best.eliminationsMostInGame}</li>\n          <li>\n            environmental kills - most in game:{' '}\n            {best.environmentalKillsMostInGame}\n          </li>\n          <li>final blows - most in game: {best.finalBlowsMostInGame}</li>\n          <li>healing done - most in game: {best.healingDoneMostInGame}</li>\n          <li>\n            hero damage done - most in game: {best.heroDamageDoneMostInGame}\n          </li>\n          <li>kills streak best: {best.killsStreakBest}</li>\n          <li>\n            melee final blows - most in game: {best.meleeFinalBlowsMostInGame}\n          </li>\n          <li>multikills best: {best.multikillsBest}</li>\n          <li>\n            objective kills - most in game: {best.objectiveKillsMostInGame}\n          </li>\n          <li>objective time - most in game: {best.objectiveTimeMostInGame}</li>\n          <li>\n            offensive assists - most in game: {best.offensiveAssistsMostInGame}\n          </li>\n          <li>\n            environmental kills - most in game:{' '}\n            {best.environmentalKillsMostInGame}\n          </li>\n          <li>solo kills - most in game: {best.soloKillsMostInGame}</li>\n          <li>\n            teleporter pads destroyed - most in game:{' '}\n            {best.teleporterPadsDestroyedMostInGame}\n          </li>\n          <li>\n            time spent on fire - most in game: {best.timeSpentOnFireMostInGame}\n          </li>\n          <li>\n            turrets destroyed - most in game: {best.turretsDestroyedMostInGame}\n          </li>\n        </ul>\n      </div>\n      <div className=\"Assists\">\n        <h2>Assists</h2>\n        <ul>\n          <li>defensive assists: {assists.defensiveAssists}</li>\n          <li>healing done: {assists.healingDone}</li>\n          <li>offensive assists: {assists.offensiveAssists}</li>\n        </ul>\n      </div>\n      <div className=\"Combat\">\n        <h2>Combat</h2>\n        <ul>\n          <li>damage done: {combat.damageDone}</li>\n          <li>barrier damage done: {combat.barrierDamageDone}</li>\n          <li>deaths: {combat.deaths}</li>\n          <li>eliminations: {combat.eliminations}</li>\n          <li>environmental kills: {combat.environmentalKills}</li>\n          <li>final blows: {combat.finalBlows}</li>\n          <li>hero damage done: {combat.heroDamageDone}</li>\n          <li>melee final blows: {combat.meleeFinalBlows}</li>\n          <li>multikills: {combat.multikills}</li>\n          <li>objective kills: {combat.objectiveKills}</li>\n          <li>objective time: {combat.objectiveTime}</li>\n          <li>solo kills: {combat.soloKills}</li>\n          <li>time spent on fire: {combat.timeSpentOnFire}</li>\n        </ul>\n      </div>\n      <div className=\"Game\">\n        <h2>Game</h2>\n        <ul>\n          <li>games won: {game.gamesWon}</li>\n          <li>time played: {game.timePlayed}</li>\n        </ul>\n      </div>\n      <div className=\"Average\">\n        <h2>Average</h2>\n        <ul>\n          <li>\n            all damage done - avg per 10 min: {average.allDamageDoneAvgPer10Min}{' '}\n          </li>\n          <li>\n            barrier damage done - avg per 10 min:{' '}\n            {average.barrierDamageDoneAvgPer10Min}{' '}\n          </li>\n          <li>deaths - avg per 10 min: {average.deathsAvgPer10Min} </li>\n          <li>\n            eliminations- avg per 10 min: {average.eliminationsAvgPer10Min}{' '}\n          </li>\n          <li>\n            final blows - avg per 10 min: {average.finalBlowsAvgPer10Min}{' '}\n          </li>\n          <li>\n            healing done - avg per 10 min: {average.healingDoneAvgPer10Min}{' '}\n          </li>\n          <li>\n            hero damage done - avg per 10 min:{' '}\n            {average.heroDamageDoneAvgPer10Min}{' '}\n          </li>\n          <li>\n            objective kills - avg per 10 min:{' '}\n            {average.objectiveKillsAvgPer10Min}{' '}\n          </li>\n          <li>\n            objective time - avg per 10 min: {average.objectiveTimeAvgPer10Min}{' '}\n          </li>\n          <li>solo kills - avg per 10 min: {average.soloKillsAvgPer10Min} </li>\n          <li>\n            time spent on fire - avg per 10 min:{' '}\n            {average.timeSpentOnFireAvgPer10Min}{' '}\n          </li>\n        </ul>\n      </div>\n      <div className=\"Misc\">\n        <h2>Miscellaneous</h2>\n        <ul>\n          <li>teleporter pads destroyed: {misc.teleporterPadsDestroyed}</li>\n          <li>turrets destroyed: {misc.turretsDestroyed}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Quickplay;\n"]},"metadata":{},"sourceType":"module"}